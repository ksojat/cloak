<project name="cloak" default="props" basedir="." xmlns:ivy='antlib:org.apache.ivy.ant'>

    <description>
	A simple build system for Clojure.
    </description>

	<!-- PROPERTIES -->
    <property name='etc.dir' location='${basedir}/etc'/>
    <property file='${etc.dir}/ivy.properties'/>

    <property name='build.dir' location='${basedir}/build'/>
    <property name='test.dir' location='${basedir}/tests'/>
  	<property name="lib.dir" location="${basedir}/lib" />
    <property name="dist.dir" location="${basedir}/bin" />

    <property name='cloak.dir'     location='${basedir}/cloak'/>
    <property name='cloak.src.dir' location='${cloak.dir}/src'/>
    <property name='cloak.resources.dir' location='${cloak.dir}/resources'/>
    <property name='cloak.classes.dir' location='${build.dir}/cloak/classes'/>
    <property name='cloak.jar' location='${dist.dir}/rosado.cloak.jar'/>
    <!-- TODO: Cloak.jar property -->

    <property name='clj-backtrace.dir' location='${basedir}/external/clj-backtrace'/>
    <property name='clj-backtrace.src.dir' location='${clj-backtrace.dir}/src'/>
    <property name='clj-backtrace.classes.dir' location='${build.dir}/clj-backtrace/classes'/>
    <property name='clj-backtrace.jar' location='${build.dir}/clj-backtrace/clj-backtrace.jar'/>

    <property name='clj-unit.dir' location='${basedir}/external/clj-unit'/>
    <property name='clj-unit.src.dir' location='${clj-unit.dir}/src'/>
    <property name='clj-unit.classes.dir' location='${build.dir}/clj-unit/classes'/>
    <property name='clj-unit.jar' location='${build.dir}/clj-unit/clj-unit.jar'/>

    <path id="compile.classpath">
        <fileset dir='${lib.dir}' includes='*.jar'/>
    </path>

    <path id='test.classpath'>
        <path refid='compile.classpath'/>
        <path location='${clj-unit.jar}'/>
        <path location='${clj-backtrace.jar}'/>
        <path location='${cloak.jar}'/>
        <path location='${test.dir}'/>
        <path location='${basedir}/lib/commons-io-1.4.jar'/>
    </path>

    <path id='clj-backtrace.compile.classpath'>
        <path refid='compile.classpath'/>
        <path location='${clj-backtrace.src.dir}'/>
        <path location='${clj-backtrace.classes.dir}'/>
    </path>

    <path id='clj-unit.compile.classpath'>
        <path refid='compile.classpath'/>
        <path location='${clj-unit.src.dir}'/>
        <path location='${clj-unit.classes.dir}'/>
        <path location='${clj-backtrace.jar}'/>
    </path>

	<path id="cloak.compile.classpath">
		<path refid="compile.classpath"/>
		<path location="${cloak.src.dir}"/>
		<path location="${cloak.classes.dir}"/>
	</path>

	<path id="run.classpath">
        <path refid="compile.classpath"/>
		<path location="${cloak.classes.dir}"/>
	</path>

	<target name="init" depends='getivy'>
	</target>

	<!-- TARGETS -->
	
	<target name="clean">
        <delete dir="${build.dir}"/>
	</target>

    <target name='resolve' depends='getivy'>
        <ivy:configure file='${basedir}/ivysettings.xml'/>
        <ivy:retrieve conf='default'/>
    </target>

    <target name='compile-external'>
        <mkdir dir='${clj-backtrace.classes.dir}'/>
        <mkdir dir='${clj-unit.classes.dir}'/>

        <java
            classname='clojure.lang.Compile'
            classpath='${clj-backtrace.classes.dir}'>
            <sysproperty key='clojure.compile.path' value='${clj-backtrace.classes.dir}'/>
            <classpath refid='clj-backtrace.compile.classpath'/>
            <arg value='backtrace.core'/>
            <arg value='backtrace.repl'/>
            <arg value='backtrace.utils'/>
        </java>
        <jar
            destfile='${clj-backtrace.jar}' basedir='${clj-backtrace.classes.dir}'/>

        <java
            classname='clojure.lang.Compile'
            classpath='${clj-unit.classes.dir}'>
            <sysproperty key='clojure.compile.path' value='${clj-unit.classes.dir}'/>
            <classpath refid='clj-unit.compile.classpath'/>
            <arg value='unittest.core'/>
            <arg value='unittest.consolereporter'/>
            <arg value='unittest.utils'/>
        </java>
        <jar
            destfile='${clj-unit.jar}' basedir='${clj-unit.classes.dir}'/>
    </target>
	
	<target name="compile-cloak"
					description="Compile Clojure sources"
          depends="init, resolve">
        <mkdir dir='${cloak.classes.dir}'/>
		<java classname="clojure.lang.Compile"
          classpath="${cloak.classes.dir}">
			<sysproperty key="clojure.compile.path" value="${cloak.classes.dir}" />
			<classpath refid="cloak.compile.classpath" />
            <arg value="rosado.cloak"/>
            <arg value="rosado.cloak.actions"/>
            <arg value="rosado.cloak.main" />
            <arg value='rosado.utils'/>
            <arg value='rosado.math.graph'/>
            <arg value='rosado.cloak.ant'/>
            <arg value='rosado.cloak.ivy'/>
		</java>
	</target>

	<target name="compile" depends="compile-cloak, compile-external"
          description="Compile Cloak.">
	</target>
	
  <target name="run">
		<java classname="rosado.cloak"
					classpathref="run.classpath"
          fork="true"
          spawn="false">
      <sysproperty key="java.library.path" path="${native.lib.dir}" />
		</java>
    </target>

    <target name='test'>
        <java
            classname='clojure.lang.Script'
            classpathref='test.classpath'
            fork='true'>
            <arg value='${test.dir}/run.clj'/>
        </java>
    </target>

  <target name="jar" depends="compile"
          description="Package compiled *.class files into a jar.">
    <mkdir dir='${dist.dir}'/>
    <!--<jar destfile="${cloak.jar}" basedir="${cloak.classes.dir}"/>-->
    <jar destfile='${cloak.jar}'>
        <fileset dir='${cloak.classes.dir}'/>
        <fileset dir='${cloak.resources.dir}'/>
    </jar>
  </target>


	<!-- UTIL TARGETS -->

	<target name="props">
		<echoproperties />
	</target>

    <!--
    Ivy targets.
    -->

    <target name='-ivy-download' unless='skip.ivy'>
        <mkdir dir='${ivy.home}'/>
        <get src='${ivy.url}' dest='${ivy.jar}' usetimestamp='yes'/>
    </target>

    <target name='-ivy-install'>
        <available file='${ivy.jar}' property='skip.ivy'/>
        <antcall target='-ivy-download'/>

        <path id='ivy.lib.path'>
            <fileset dir='${ivy.home}' includes='*.jar'/>
        </path>
        <taskdef
            resource='org/apache/ivy/ant/antlib.xml'
            uri='antlib:org.apache.ivy.ant'
            classpathref='ivy.lib.path'/>
    </target>

    <target name='getivy' depends='-ivy-install'/>

</project>
